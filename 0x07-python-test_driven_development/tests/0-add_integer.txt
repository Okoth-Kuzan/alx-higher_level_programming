==========================
How to Use add_integer.py
==========================

This module defines a function ``add_integer(a, b=98)`` to add two integers.

Usage
=====

``add_integer(a, b=98)`` returns the addition of two integer or float values after casting them to integers if necessary.

::

    >>> add_integer = __import__('add_integer').add_integer
    >>> result = add_integer(2, 3)
    >>> result
    5

::

    >>> add_integer(2, -3)
    -1

The function also works with floating-point values.

::

    >>> add_integer(2.0, 3.0)
    5

Note that floats are casted to ints before addition is performed.

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

Non-Integer Inputs
==================

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

::

    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

